// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /register
import { Message } from 'node-telegram-bot-api';
import { telegramUsers } from '../database';
import { getUserName, createDivider } from '../utils';
import { BotState } from '../types';

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /register - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–ª–∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞
 */
export default async function registerCommand(msg: Message): Promise<void> {
  const bot = global.bot;
  const chatId = msg.chat.id;
  const userId = msg.from?.id;
  
  if (!userId) {
    console.error('[TelegramBot] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    return;
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  const user = await telegramUsers.getById(userId);
  
  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (user && user.is_registered) {
    const alreadyRegisteredMessage = `
‚úÖ ${getUserName(msg)}, –≤—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!

${createDivider()}

–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤ Telegram —É–∂–µ —Å–≤—è–∑–∞–Ω —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º –Ω–∞ —Å–∞–π—Ç–µ.
–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞.

–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /profile.
    `;
    
    await bot.sendMessage(chatId, alreadyRegisteredMessage);
    return;
  }
  
  // –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
  const registerMessage = `
üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ "–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ"

${createDivider()}

–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–≤—è–∑–∞—Ç—å –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤ Telegram —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º –Ω–∞ —Å–∞–π—Ç–µ.

–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:

1Ô∏è‚É£ *–£ –º–µ–Ω—è —É–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ —Å–∞–π—Ç–µ*
   –í–æ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è" -> "–°–≤—è–∑–∞—Ç—å —Å Telegram"
   
2Ô∏è‚É£ *–£ –º–µ–Ω—è –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–∞ —Å–∞–π—Ç–µ*
   –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –ø—Ä—è–º–æ –∑–¥–µ—Å—å –≤ –±–æ—Ç–µ

${createDivider()}

–•–æ—Ç–∏—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –±–æ—Ç?
  `;
  
  // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
  const keyboard = {
    inline_keyboard: [
      [
        { text: '‚úÖ –î–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', callback_data: JSON.stringify({ action: 'register_start' }) },
        { text: '‚ùå –ù–µ—Ç, –ø–æ–∑–∂–µ', callback_data: JSON.stringify({ action: 'register_cancel' }) }
      ],
      [
        { text: 'üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url: 'https://vdohnovenie.pro/register' }
      ]
    ]
  };
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
  await bot.sendMessage(chatId, registerMessage, {
    parse_mode: 'Markdown',
    reply_markup: keyboard
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–ª–±—ç–∫–∞ –æ—Ç –∫–Ω–æ–ø–æ–∫
  bot.on('callback_query', async (query) => {
    if (!query.data || !query.message) return;
    
    try {
      const data = JSON.parse(query.data);
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      if (data.action === 'register_start') {
        // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∫–æ–ª–±—ç–∫, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ
        await bot.answerCallbackQuery(query.id, {
          text: '–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...'
        });
        
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        await bot.deleteMessage(query.message.chat.id, query.message.message_id.toString());
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        const phoneRequestMessage = `
üì± –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–º –Ω—É–∂–µ–Ω –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.

${createDivider()}

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
+7XXXXXXXXXX –∏–ª–∏ 8XXXXXXXXXX

–ú—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π.
        `;
        
        await bot.sendMessage(query.message.chat.id, phoneRequestMessage);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ "–æ–∂–∏–¥–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
        if (userId) {
          await telegramUsers.updateState(userId, BotState.AWAITING_PHONE);
        }
      }
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      else if (data.action === 'register_cancel') {
        // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∫–æ–ª–±—ç–∫
        await bot.answerCallbackQuery(query.id, {
          text: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞'
        });
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞
        await bot.sendMessage(query.message.chat.id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ –µ–µ –ø–æ–∑–∂–µ, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /register.');
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (userId) {
          await telegramUsers.updateState(userId, BotState.IDLE);
        }
      }
    } catch (error) {
      console.error('[TelegramBot] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback_query –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error);
      
      // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∫–æ–ª–±—ç–∫ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ, —á—Ç–æ–±—ã –Ω–µ –∑–∞–≤–∏—Å–∞–ª–∞ –∫–Ω–æ–ø–∫–∞
      await bot.answerCallbackQuery(query.id, {
        text: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞'
      });
    }
  });
} 